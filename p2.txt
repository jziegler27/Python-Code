

                                Python Programming
                                   Summer 2022
                                    Project 2
        
turnin code: py_p2


Write a python3.7 program that reads a file and interprets the
robot control pgm in it.
The name of the file will be supplied as the only cmd-line arg.

Assume the robot starts in the lower left hand position of a 32x32 board.
This position is (0,0) giving the x,y axes, respectively.

The format of the language is:

    label  opcode  operand ... operand

where there are 0 to 4 operands depending on the instruction.

The label is optional but must be in column 1 if present.
There must be white space (blanks or tabs) in column 1 if there
is no label.
There must be white space between the parts of a statement.
Any portion of a line after a # is a comment.
All text is case IN-sensitive.
All integer values may be either positive or negative.
You may assume that all vars will appear as the target of a SET
instruction before subsequent use in any other statement type.
Relops consist of:  <  >  ==  !=
An int_or_var is either an integer or a variable containing an
integer value.

The commands in the language are:

    YMOVE int_or_var
    XMOVE int_or_var
    PRINTLOC
    IF    int_or_var  relop  int_or_var  label
    GOTO  label
    SET   var  int_or_var
    ADD   var  int_or_var
    SUB   var  int_or_var
    HALT

Example:

    YMOVE 10              # along y-axis
    SET VARMOV 0          # sets VARMOVE to 0
L1  ADD VARMOV 1          # adds 1 to VARMOVE
    xmove 1               # along x-axis
    IF varmov < 8 L1
    YMOVE -3
    PRINTLOC
    HALT

which should print:  
    8 7

Just print the results of each PRINTLOC cmd, i.e. do NOT print debug output.

If a move would go off the board, print an error message giving the
instruction and the location it would move to, then stop the program.
    
Simply exit(0) the program if you execute past the physical
end of the program without encountering a HALT.

I will run your script on system64 this way:
    python3.7  ./script_name  filename_to_read

All you need to turnin is the python script.
